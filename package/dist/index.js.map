{"version":3,"sources":["../src/index.tsx","#style-inject:#style-inject","../src/components/style.css","../src/components/carousel.tsx","../src/hooks/index.ts","../src/utils/index.ts","../src/plugins/index.ts","../src/components/context.tsx"],"sourcesContent":["export * from './components';\nexport * from './hooks';\nexport * from './types';\n","\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ","import styleInject from '#style-inject';styleInject(\"[rhc-viewport]{overflow:hidden}[rhc-container]{display:flex;backface-visibility:hidden;flex-direction:row;touch-action:pan-y;height:auto;margin-left:calc(-1 * var(--rhc-slides-gap) / 2);margin-right:calc(-1 * var(--rhc-slides-gap) / 2)}[rhc-slide]{position:relative;min-width:0px;max-width:100%;flex:0 0 calc(100% / var(--rhc-slides-per-view));padding-left:calc(var(--rhc-slides-gap) / 2);padding-right:calc(var(--rhc-slides-gap) / 2)}[rhc-root][data-oriented=y] [rhc-container]{touch-action:pan-x;flex-direction:column;margin:0;margin-top:calc(-1 * var(--rhc-slides-gap) / 2);margin-bottom:calc(-1 * var(--rhc-slides-gap) / 2)}[rhc-root][data-oriented=y] [rhc-slide]{padding:0;padding-top:calc(var(--rhc-slides-gap) / 2);padding-bottom:calc(var(--rhc-slides-gap) / 2)}\\n\")","import './style.css';\n\nimport * as React from 'react';\nimport { useCarousel } from '@/hooks';\nimport { CarouselOptionsType } from '@/types';\nimport {\n  CarouselContext,\n  CarouselViewportContext,\n  useCarouselContext,\n  useCarouselViewportContext,\n} from './context';\n\nexport interface CarouselRoot extends React.HTMLAttributes<HTMLDivElement> {\n  options?: CarouselOptionsType;\n}\n\nconst Root = React.forwardRef<HTMLDivElement, CarouselRoot>((props, ref) => {\n  const { children, options, ...rest } = props;\n  const { carouselRef, navigation, pagination, computedStyles } = useCarousel({\n    ...options,\n  });\n\n  const style = `\n    [rhc-viewport] {\n      ${computedStyles}\n    }\n  `;\n\n  return (\n    <CarouselContext.Provider\n      value={{\n        navigation: navigation,\n        pagination: pagination,\n        carouselRef: carouselRef,\n      }}\n    >\n      <div\n        ref={ref}\n        rhc-root=''\n        dir={options?.direction || undefined}\n        data-oriented={options?.axis === 'y' ? 'y' : 'x'}\n        {...rest}\n      >\n        <style\n          scoped\n          style={{\n            display: 'none !important',\n            margin: '0px !important',\n            padding: '0px !important',\n          }}\n        >\n          {style}\n        </style>\n        {children}\n      </div>\n    </CarouselContext.Provider>\n  );\n});\nRoot.displayName = 'Root';\n\nexport interface CarouselViewportProps\n  extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst Viewport = (props: CarouselViewportProps) => {\n  const { children, ...rest } = props;\n  const { carouselRef } = useCarouselContext();\n\n  return (\n    <CarouselViewportContext.Provider\n      value={{ totalSlides: React.Children.count(children) ?? 0 }}\n    >\n      <div ref={carouselRef} rhc-viewport=''>\n        <div rhc-container='' aria-live='polite' {...rest}>\n          {children}\n        </div>\n      </div>\n    </CarouselViewportContext.Provider>\n  );\n};\n\nexport interface CarouselSlideProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  index: number;\n}\n\nconst Slide = React.forwardRef<HTMLDivElement, CarouselSlideProps>(\n  (props, ref) => {\n    const { children, index = 0, ...rest } = props;\n    const { totalSlides } = useCarouselViewportContext();\n\n    return (\n      <div\n        rhc-slide=''\n        ref={ref}\n        role='group'\n        aria-label={`Slide ${index} / ${totalSlides}`}\n        {...rest}\n      >\n        {children}\n      </div>\n    );\n  }\n);\nSlide.displayName = 'Slide';\n\nexport interface CarouselNavigationButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  onNavigation?: (e: React.MouseEvent) => void;\n}\n\nconst PrevButton = React.forwardRef<\n  HTMLButtonElement,\n  CarouselNavigationButtonProps\n>((props, ref) => {\n  const { onNavigation, ...rest } = props;\n  const { navigation } = useCarouselContext();\n\n  const handleClick = React.useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      if (!navigation.canScrollPrev) return;\n      navigation.handleScrollPrev();\n      onNavigation?.(e);\n    },\n    [onNavigation, navigation.handleScrollPrev, navigation.canScrollPrev]\n  );\n\n  return (\n    <button\n      rhc-nav-prev=''\n      aria-label={'Navigate Next Slide Button'}\n      ref={ref}\n      onClick={handleClick}\n      disabled={!navigation.canScrollPrev}\n      data-disabled={!navigation.canScrollPrev}\n      {...rest}\n    />\n  );\n});\nPrevButton.displayName = 'PrevButton';\n\nconst NextButton = React.forwardRef<\n  HTMLButtonElement,\n  CarouselNavigationButtonProps\n>((props, ref) => {\n  const { onNavigation, ...rest } = props;\n  const { navigation } = useCarouselContext();\n\n  const handleClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      if (!navigation.canScrollNext) return;\n      navigation.handleScrollNext();\n      onNavigation?.(e);\n    },\n    [onNavigation, navigation.handleScrollNext, navigation.canScrollNext]\n  );\n\n  return (\n    <button\n      rhc-nav-next=''\n      ref={ref}\n      aria-label={'Navigate Previous Slide Button'}\n      onClick={handleClick}\n      disabled={!navigation.canScrollNext}\n      data-disabled={!navigation.canScrollNext}\n      {...rest}\n    />\n  );\n});\nNextButton.displayName = 'NextButton';\n\ntype PaginationItemProps = {\n  index: number;\n  isActive: boolean;\n  props: any;\n};\n\nexport interface PaginationProps extends React.HTMLAttributes<HTMLDivElement> {\n  renderItem?: (props: PaginationItemProps) => React.ReactNode;\n}\n\nconst Pagination = React.forwardRef<HTMLDivElement, PaginationProps>(\n  (props, ref) => {\n    const { renderItem: renderItemProps, ...rest } = props;\n    const { pagination } = useCarouselContext();\n\n    const renderItem = React.useCallback(\n      (_, index, array) => {\n        const isActive = index === pagination.selectedIndex;\n        const defaultProps = {\n          'rhc-pagination-dot': '',\n          'aria-current': isActive || undefined,\n          'data-active': isActive,\n          'aria-label': `Go to slide ${index + 1}/${array.length}`,\n          onClick: () => pagination.handleScrollToIndex(index),\n        } as React.HTMLAttributes<HTMLDivElement>;\n\n        if (renderItemProps)\n          return (\n            <React.Fragment key={index}>\n              {renderItemProps({\n                index,\n                isActive,\n                props: defaultProps,\n              })}\n            </React.Fragment>\n          );\n\n        return <span role='button' key={index} {...defaultProps} />;\n      },\n      [\n        renderItemProps,\n        pagination.selectedIndex,\n        pagination.handleScrollToIndex,\n      ]\n    );\n\n    return (\n      <div rhc-pagination='' ref={ref} {...rest}>\n        {pagination.scrollSnaps.map(renderItem)}\n      </div>\n    );\n  }\n);\nPagination.displayName = 'Pagination';\n\nexport { Root, Viewport, Slide, PrevButton, NextButton, Pagination };\n","import * as React from 'react';\nimport useEmblaCarousel, { EmblaCarouselType } from 'embla-carousel-react';\nimport {\n  CarouselOptionsType,\n  EmblaCarouelRefType,\n  NavigationItemType,\n  PaginationItemType,\n} from '@/types';\nimport { removeKeys } from '@/utils';\nimport { SlideFocus } from '@/plugins';\n\nexport type UseCarouselType = {\n  carouselRef: EmblaCarouelRefType;\n  carouselApi: EmblaCarouselType;\n  navigation: NavigationItemType;\n  pagination: PaginationItemType;\n  computedStyles: string;\n};\n\nconst createEmblaConfig = (config: CarouselOptionsType) => {\n  const newBreakpoints = config?.breakpoints\n    ? Object.keys(config.breakpoints).reduce(\n        (acc, cur) => (\n          (acc[`(min-width: ${cur})`] = config.breakpoints[cur]), acc\n        ),\n        {}\n      )\n    : {};\n\n  return removeKeys({ ...config, breakpoints: { ...newBreakpoints } }, [\n    'slidesPerView',\n    'slidesGap',\n  ]);\n};\n\nconst useCarousel = (options?: CarouselOptionsType): UseCarouselType => {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    {\n      axis: 'x',\n      align: 'start',\n      containScroll: 'trimSnaps',\n      loop: false,\n      ...createEmblaConfig(options),\n    },\n    [SlideFocus()]\n  );\n\n  const computedStyles = React.useMemo(() => {\n    const cssVarTokens = {\n      slidesPerView: '--rhc-slides-per-view',\n      slidesGap: '--rhc-slides-gap',\n    };\n    const defaultSlidesPerView = `${cssVarTokens.slidesPerView}:${\n      options?.slidesPerView ?? 1\n    };${cssVarTokens.slidesGap}:${options?.slidesGap ?? '0px'}`;\n    const breakpointsSlidesPerView =\n      options.breakpoints &&\n      Object.keys(options.breakpoints).map((key) => {\n        const breakpoints = options.breakpoints[key];\n        const slidesPerViews = breakpoints?.slidesPerView\n          ? `${cssVarTokens.slidesPerView}:${breakpoints.slidesPerView};`\n          : '';\n        const slidesGap = breakpoints?.slidesGap\n          ? `${cssVarTokens.slidesGap}:${breakpoints.slidesGap};`\n          : '';\n\n        return `@media (min-width: ${key}) {${slidesPerViews}${slidesGap}}`;\n      });\n\n    const result = [defaultSlidesPerView].concat(breakpointsSlidesPerView);\n\n    return result.join('; ');\n  }, [options.breakpoints, options.slidesPerView, options.slidesGap]);\n\n  const [canScrollPrev, setCanScrollPrev] = React.useState<boolean>(false);\n  const [canScrollNext, setCanScrollNext] = React.useState<boolean>(false);\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(0);\n  const [scrollSnaps, setScrollSnaps] = React.useState<number[]>([]);\n\n  const handleScrollPrev = React.useCallback(\n    () => emblaApi && emblaApi.scrollPrev(),\n    [emblaApi]\n  );\n  const handleScrollNext = React.useCallback(\n    () => emblaApi && emblaApi.scrollNext(),\n    [emblaApi]\n  );\n  const handleScrollToIndex = React.useCallback(\n    (index: number) => emblaApi && emblaApi.scrollTo(index),\n    [emblaApi]\n  );\n\n  const onInit = React.useCallback((emblaApi: EmblaCarouselType) => {\n    setScrollSnaps(emblaApi.scrollSnapList());\n  }, []);\n\n  const onSelect = React.useCallback((emblaApi: EmblaCarouselType) => {\n    setSelectedIndex(emblaApi.selectedScrollSnap());\n    setCanScrollPrev(emblaApi.canScrollPrev());\n    setCanScrollNext(emblaApi.canScrollNext());\n  }, []);\n\n  React.useEffect(() => {\n    if (!emblaApi) return;\n\n    onInit(emblaApi);\n    onSelect(emblaApi);\n    emblaApi.on('reInit', onInit);\n    emblaApi.on('reInit', onSelect);\n    emblaApi.on('select', onSelect);\n  }, [emblaApi, onInit, onSelect]);\n\n  return {\n    carouselRef: emblaRef,\n    carouselApi: emblaApi,\n    navigation: {\n      canScrollNext,\n      canScrollPrev,\n      handleScrollNext,\n      handleScrollPrev,\n    },\n    pagination: {\n      selectedIndex,\n      scrollSnaps,\n      handleScrollToIndex,\n    },\n    computedStyles: computedStyles,\n  };\n};\n\nexport { useCarousel };\n","export const removeKeys = <T extends object, K extends keyof T>(\n  obj: T,\n  keys: Array<K>\n) => {\n  if (Array.isArray(obj)) return obj.map((item) => removeKeys(item, keys));\n\n  if (typeof obj === 'object' && obj !== null) {\n    return Object.keys(obj).reduce((previousValue, key) => {\n      return keys.includes(key as K)\n        ? previousValue\n        : { ...previousValue, [key]: removeKeys(obj[key], keys) };\n    }, {});\n  }\n\n  return obj;\n};\n","import { EmblaCarouselType, EmblaOptionsType } from 'embla-carousel-react';\n\nconst defaultOptions: EmblaOptionsType = {};\nconst globalOptions: EmblaOptionsType = {};\n\n// Plugin\nconst SlideFocus = (userOptions?: any) => {\n  const options = Object.assign({}, defaultOptions, globalOptions, userOptions);\n  let carousel: EmblaCarouselType;\n  let lastTabPressTime = 0;\n\n  function init(embla: EmblaCarouselType) {\n    carousel = embla;\n    const { eventStore } = carousel.internalEngine();\n\n    eventStore.add(document, 'keydown', registerTabPress, false);\n    carousel.slideNodes().forEach(addSlideFocusEvent);\n  }\n\n  function destroy() {}\n\n  function registerTabPress(event: KeyboardEvent) {\n    if (event.code !== 'Tab') return;\n    lastTabPressTime = new Date().getTime();\n  }\n\n  function addSlideFocusEvent(slide: EventTarget, index: number) {\n    const { scrollTo, eventStore, options } = carousel.internalEngine();\n\n    const focus = (): void => {\n      const nowTime = new Date().getTime();\n      const diffTime = nowTime - lastTabPressTime;\n\n      if (diffTime > 10) return;\n\n      carousel.rootNode().scrollLeft = 0;\n      const selectedIndex = Math.floor(index / +options?.slidesToScroll);\n      scrollTo.index(selectedIndex, 0);\n    };\n\n    eventStore.add(slide, 'focus', focus, true);\n  }\n\n  const self = {\n    name: 'SlideFocus',\n    options,\n    init,\n    destroy,\n  };\n  return self;\n};\n\nexport { SlideFocus };\n","import * as React from 'react';\nimport {\n  EmblaCarouelRefType,\n  NavigationItemType,\n  PaginationItemType,\n} from '@/types';\n\nexport interface CarouselContextType {\n  navigation: NavigationItemType;\n  pagination: PaginationItemType;\n  carouselRef: EmblaCarouelRefType;\n}\n\nconst CarouselContext = React.createContext<CarouselContextType | null>(null);\n\nconst useCarouselContext = () => {\n  const context = React.useContext(CarouselContext);\n\n  if (!context) {\n    throw new Error(\n      'Carousel.* component must be rendered as child of CarouselRoot component'\n    );\n  }\n\n  return context;\n};\n\ninterface CarouselViewportContextType {\n  totalSlides: number;\n}\n\nconst CarouselViewportContext =\n  React.createContext<CarouselViewportContextType | null>(null);\n\nconst useCarouselViewportContext = () => {\n  const context = React.useContext(CarouselViewportContext);\n\n  if (!context) {\n    throw new Error(\n      'Carousel Slide component must be rendered as child of CarouselViewport component'\n    );\n  }\n\n  return context;\n};\nexport {\n  CarouselContext,\n  useCarouselContext,\n  CarouselViewportContext,\n  useCarouselViewportContext,\n};\n"],"mappings":"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","names":["src_exports","__export","NextButton","Pagination","PrevButton","Root","Slide","Viewport","useCarousel","__toCommonJS","styleInject","css","insertAt","head","style","styleInject","React","React","import_embla_carousel_react","removeKeys","obj","keys","item","previousValue","key","defaultOptions","globalOptions","SlideFocus","userOptions","options","carousel","lastTabPressTime","init","embla","eventStore","registerTabPress","addSlideFocusEvent","destroy","event","slide","index","scrollTo","focus","selectedIndex","createEmblaConfig","config","newBreakpoints","acc","cur","removeKeys","useCarousel","options","emblaRef","emblaApi","useEmblaCarousel","SlideFocus","computedStyles","_a","_b","cssVarTokens","defaultSlidesPerView","breakpointsSlidesPerView","key","breakpoints","slidesPerViews","slidesGap","canScrollPrev","setCanScrollPrev","canScrollNext","setCanScrollNext","selectedIndex","setSelectedIndex","scrollSnaps","setScrollSnaps","handleScrollPrev","handleScrollNext","handleScrollToIndex","index","onInit","onSelect","React","CarouselContext","useCarouselContext","context","CarouselViewportContext","useCarouselViewportContext","import_jsx_runtime","Root","props","ref","children","options","rest","carouselRef","navigation","pagination","computedStyles","useCarousel","style","CarouselContext","Viewport","_a","useCarouselContext","CarouselViewportContext","Slide","index","totalSlides","useCarouselViewportContext","PrevButton","onNavigation","handleClick","e","NextButton","Pagination","renderItemProps","renderItem","_","array","isActive","defaultProps"]}